from collections import deque
n, m = map(int, input().split())
graph = []
visited = [[False]*m for _ in range(n)]

for _ in range(n):
    graph.append(list(map(int, input())))

dx = [0,0,-1,1]
dy = [-1,1,0,0]

def bfs(start, visited):
    queue = deque()
    queue.append(start)
    while queue:
        x, y = queue.popleft()
        visited[x][y] = True
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if nx < 0 or ny < 0 or nx >= n or ny >= m:
                continue
            if graph[nx][ny] == 1 and not visited[nx][ny]:
                visited[nx][ny] = True
                graph[nx][ny] = graph[x][y]+1
                queue.append((nx,ny))

bfs((0,0), visited)
print(graph[n-1][m-1])
